declare namespace kindleClipping {
  /** splitted clippings.text with a block */
  export type NoteOriginal = string[]
  /** splitted label string from clippings.text */
  export interface LabelRaw {
    pageTypeText: string
    locationText: string
    dateText: string
  }

  /** parsed label*/
  export interface Label {
    type: string
    page: string
    location: string
    date: string
  }

  /** normal note object  */
  export interface Note extends Label {
    bookName: string
    content: string
  }

  /** merged type of highlight and note */
  export interface NoteMerged extends Note {
    note: string
  }


  export function TextParse(string): Note[]

  export class KindleClipping {
    constructor (clippingPath?: string)
    /** clippingPath is the clipping.txt path generated by the device type */
    static clippingPath: string
    /**
     * getJson returns an array of unprocessed notes and highlight objects
     * ```
     * eg.
     * KindleClippingParser().getJson() // [{bookName:'Mindset (Carol Dweck)',content:'As a contrast, let’s look',type:'Highlight',page:'37',location:'565',date:'Friday, February 19, 2021 6:06:48 PM'}]
     * ```
     */
    public getJson: () => Note[]
    /**
     * getMergedJson returns an array of combined notes and annotation objects
     * ```
     * KindleClippingParser().getMergedJson() // [{bookName:'Mindset (Carol Dweck)',content:'excellence—whose greatness',type:'Note',page:'37',location:'565',date:'Friday, February 19, 2021 6:06:48 PM',note:'As a contrast, let’s look'}]
     * ```
     */
    public getMergedJson: () => (NoteMerged | Note)[]
  }
}

export default kindleClippingParser.KindleClipping

declare function kindleClipping(): kindleClipping.KindleClipping

export = kindleClipping
